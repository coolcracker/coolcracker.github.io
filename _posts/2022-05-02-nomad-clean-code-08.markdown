---
title:  "CleanCode Challenge 08"
date:   2022-05-02 01:04:23
categories: [CleanCode]
tags: [CleanCode]
---
### 오늘 TIL 3줄 요약

- 프로그래머라면 형식을 깔끔하게 맞춰 코드를 짜야 한다.
- 세로 밀집도로 서로 밀접한 코드 행은 세로로 가까이 놓아야한다.
- 가급적이면 짧은 행, 짧은 코드, 들여쓰기 등을 잘 지켜서 작성하자.

### TIL (Today I Learned)  날짜

- 22년 05월 2일

### 오늘 읽은 범위

- 5장. 형식 맞추기

### 책에서 기억하고 싶은 내용을 써보세요.

p.96

- 프로그래머라면 형식을 깔끔하게 맞춰 코드를 짜야 한다.
- 코드 형식을 맞추기 위한 간단한 규칙을 정하고 그 규칙을 착실히 따라야 한다. 필요하다면 자동으로 적용하는 도구를 활용한다.
- 오늘 구현한 코드의 가독성은 앞으로 바뀔 코드의 품질에 지대한 영향을 미친다. 맨 처음 잡아놓은 구현 스타일과 가독성 수준은 유지보수 용이성과 확장성에 계속 영향을 미친다.

p.97

- 적절한 행의 길이를 유지하자. 파일당 200줄 미만이어도 커다란 시스템을 구축할 수 있다. 일반적으로 큰 파일보다 작은 파일이 이해하기 쉽다.

p.98

- 소스 파일도 신문 기사와 비슷하게 이름은 간단하면서도 설명이 가능하게 짓고 첫 부분은 고차원 개념과 알고리즘을 설명하고 아래로 내려갈수록 의도를 세세하게 묘사한다. 마지막에는 가장 저차원 함수와 세부 내역이 나온다.
- 개념(패키지 선언부, import 문, 각 함수 사이)은 빈 행으로 분리해야한다.

p.100

- 세로 밀집도로 서로 밀접한 코드 행은 세로로 가까이 놓아야한다. (불필요한 주석등 세로 밀집도에서 제거 필요)

p.101

- 수직거리
    - 변수 선언, 변수는 사용하는 위치에 최대한 가까이 선언한다. (루프 문 내부, 블록 상단이나 루프 직전 등)
    - 인스턴스 변수, 클래스 맨 처음에 선언. 변수 간에 세로로 거리를 두지 않는다. 잘 설계한 클래스는 많은 (혹은 대다수) 클래스 메서드가 인스턴스 변술르 사용하기 때문이다. 잘 알려진 위치에 인스턴스 변수를 모아야 찾을 수 있다.(ex. 자바는 보통 맨 처음에 인스턴스 변수 선언, c++에서는 클래스 마지막에 선언하는 가위 규칙 적용)
    - 종속 변수, 한 함수가 다른 함수를 호출한다면 두 함수는 세로로 가까이 배치한다. 자연스럽게 읽히기 위해서 가능하다면 호출하는 함수를 호출되는 함수보다 먼저 배치한다.
    - 개념적 유사성, 어떤 코드는 서로 끌어당긴다. 개념적인 친화도가 높기 때문이다. 친화도가 높을수록 코드를 가까이 배치힌다. (ex. 함수간 호출, 비슷한 동작 수행)
    - 일반적으로 함수 호출 종속성은 아래 방향으로 유지한다. 호출되는 함수를 호출하는 함수보다 나중에 배치한다. 그러면 소스 모듈이 고차원에서 저차원으로 자연스럽게 내려간다.
    - 신문 기사와 마찬가지로 가장 중요한 개념을 가장 먼저 표현한다. 세세한 사항은 마지막에 표현한다.

p. 107

- 한 행의 가로 길이는 가로 20자에서 60자 사이인 행이 총 행 수의 40%에 달한다. 프로그래머는 명백하게 짧은 행을 선호한다. 개인적으로는 120자 정도로 행 길이를 제한한다.

p. 108

- 가로로는 공백을 사용해 밀접한 개념과 느슨한 개념을 표현한다.
    - 공백 : 할당문, 괄호 안 인수들, 항 사이
    - 밀접 : 함수와 인수간, 승수

p. 109

- 변수 유형은 무시되고 변수 이름을 읽게되는 문제가 있으므로 선언문과 할당문을 별도로 정렬하지 않아야 한다.

### 오늘 읽은 소감은? 떠오르는 생각을 가볍게 적어보세요.

- 읽기 쉬운 코드, 이해하기 쉬운 코드, 의도를 파악하기 쉬운 코드를 작성하기 위해서는 형식에 맞추어서 작성을 해야한다.

#노마드코더 #북클럽 #노개북